version: '3'
services:
  mysql:
    image: mysql:5.7.16
    container_name: sell_db
    ports:
      - "3310:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    restart: always
    volumes:
      - ./data:/var/lib/mysql
    healthcheck:
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p${MYSQL_PASSWORD}' ]
      timeout: 20s
      retries: 10
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
    networks:
      - sell_network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: sell_web
    container_name: sell_api
    ports:
      - "7999:8000"
    env_file:
      - .env
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 20s
      timeout: 20s
      retries: 5
    command: 'python -W ignore manage.py runserver 0.0.0.0:8000'
    depends_on: 
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./src:/app
    networks:
      - sell_network
  
  rabbitmq:
    image: rabbitmq:3.8.2-management
    container_name: rabbitmq
    ports:
     - "5672:5672"
     - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 5
    networks: 
     - sell_network
  
  worker:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    container_name: worker
    command: celery -A sellweb worker -l INFO
    volumes:
       - ./src:/app
    links:
      - mysql
      - rabbitmq
      - api 
    depends_on:
      - mysql
      - rabbitmq
      - api
    networks: 
     - sell_network

networks:
  sell_network:

